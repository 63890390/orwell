cmake_minimum_required(VERSION 3.1.0)

project(orwell)

set(CMAKE_INCLUDE_CURRENT_DIR ON) # Find includes in corresponding build directories
set(CMAKE_AUTOMOC ON) # Instruct CMake to run moc automatically when needed
set(CMAKE_AUTOUIC ON) # Create code from a list of Qt designer ui files

find_library(ZLIB_LIBRARY z)

#Modern FFMPEG
include(ExternalProject)
set(FFMPEG_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../deps/ffmpeg)
set(FFMPEG_BINARY_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../deps/ffmpeg_build)
ExternalProject_Add(ffmpeg PREFIX ${FFMPEG_SRC_DIR}
					#URL ...
    				#URL_HASH SHA2=...
					SOURCE_DIR ${FFMPEG_SRC_DIR}
					CONFIGURE_COMMAND sh ${FFMPEG_SRC_DIR}/configure --enable-nonfree --enable-nvenc --enable-libx264 --enable-gpl --enable-cuda --enable-cuvid --enable-cuda-nvcc #sudo apt-get install yasm
					BINARY_DIR ${FFMPEG_BINARY_DIR}
					BUILD_COMMAND "make"
					INSTALL_COMMAND "")
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../deps/ffmpeg)

add_executable(orwell ${orwell_gtk3_SRCS})
add_dependencies(orwell ffmpeg)# zlib)

target_link_libraries( orwell PRIVATE
			   Boost::thread 
			   AVCODEC_UPDATED_LIB AVUTIL_UPDATED_LIB SWS_SCALE_UPDATED_LIB SWRESAMPLE_UPDATED_LIB ${ZLIB_LIBRARY} #zlib MUST come AFTER ffmpeg
		       myRtspClient pthread ${GTKMM_LIBRARIES} ${GLEW_LIBRARY} ${GLU_LIBRARY} ${GL_LIBRARY} ${X11_LIBRARY})

#TODO: create a target for Android which links needed libraries in PUBLIC mode. Ff I understood correctly that's what needs to be done